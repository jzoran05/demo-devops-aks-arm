{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentLabel": {
      "type": "string"
    },    
    "keyVault-name": {
        "type": "string"
    },
    "keyVault-location": {
        "type": "string"
    },
    "keyVault-sku": {
        "type": "string",
        "defaultValue": "Standard",
        "allowedValues": [
            "Standard",
            "standard",
            "Premium",
            "premium"
        ],
        "metadata": {
            "description": "SKU for the vault"
        }
    },
    "keyVault-accessPolicies": {
        "type": "array",
        "defaultValue": [],
        "metadata": {
            "description": "The access policies defined for this vault."
        }
    },
    "keyVault-tenant": {
        "type": "string"
    },
    "keyVault-enabledForDeployment": {
        "type": "bool"
    },
    "keyVault-enabledForTemplateDeployment": {
        "type": "bool"
    },
    "keyVault-enabledForDiskEncryption": {
        "type": "bool"
    },
    "keyVault-networkAcls": {
        "type": "object",
        "metadata": {
            "description": "The network firewall defined for this vault."
        }
    },
    "aks-resourceName": {
      "type": "string",
      "metadata": {
          "description": "The name of the Managed Cluster resource."
      }
  },
  "aks-location": {
      "type": "string",
      "metadata": {
          "description": "The location of AKS resource."
      }
  },
  "aks-dnsPrefix": {
      "type": "string",
      "metadata": {
          "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
  },
  "aks-osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
          "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
  },
  "aks-agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
          "description": "The number of agent nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
  },
  "aks-agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
          "description": "The size of the Virtual Machine."
      }
  },
  "aks-servicePrincipalClientId": {
      "metadata": {
          "description": "Client ID (used by cloudprovider)."
      },
      "type": "securestring"
  },
  "aks-servicePrincipalClientSecret": {
      "metadata": {
          "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
  },
  "aks-osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": [
          "Linux"
      ],
      "metadata": {
          "description": "The type of operating system."
      }
  },
  "aks-kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.7.7",
      "metadata": {
          "description": "The version of Kubernetes."
      }
  },
  "aks-networkPlugin": {
      "type": "string",
      "allowedValues": [
          "azure",
          "kubenet"
      ],
      "metadata": {
          "description": "Network plugin used for building Kubernetes network."
      }
  },
  "aks-maxPods": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
          "description": "Maximum number of pods that can run on a node."
      }
  },
  "aks-enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
          "description": "Boolean flag to turn on and off of RBAC."
      }
  },
  "aks-enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
          "description": "Boolean flag to turn on and off of http application routing."
      }
  },
  "aks-enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
          "description": "Boolean flag to turn on and off of omsagent addon."
      }
  },
  "aks-workspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
          "description": "Specify the region for your OMS workspace."
      }
  },
  "aks-workspaceName": {
      "type": "string",
      "metadata": {
          "description": "Specify the name of the OMS workspace."
      }
  },
  "aks-omsWorkspaceId": {
      "type": "string",
      "metadata": {
          "description": "Specify the resource id of the OMS workspace."
      }
  },
  "aks-omsSku": {
      "type": "string",
      "defaultValue": "standalone",
      "allowedValues": [
          "free",
          "standalone",
          "pernode"
      ],
      "metadata": {
          "description": "Select the SKU for your workspace."
      }
  },
  "aks-vnetSubnetID": {
      "type": "string",
      "metadata": {
          "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
      }
  },
  "aks-serviceCidr": {
      "type": "string",
      "metadata": {
          "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
  },
  "aks-dnsServiceIP": {
      "type": "string",
      "metadata": {
          "description": "Containers DNS server IP address."
      }
  },
  "aks-dockerBridgeCidr": {
      "type": "string",
      "metadata": {
          "description": "A CIDR notation IP for Docker bridge."
      }
  },
  "aks-principalId": {
      "type": "string",
      "metadata": {
          "description": "The objectId of service principal."
      }
  },
  "aks-aciVnetSubnetName": {
      "type": "string",
      "metadata": {
          "description": "Name of virtual network subnet used for the ACI Connector."
      }
  },
  "aks-aciConnectorLinuxEnabled": {
      "type": "bool",
      "metadata": {
          "description": "Enables the Linux ACI Connector."
      }
  }
},
"variables": {
  "resourceSuffix": "[Concat('-', parameters('environmentLabel'))]"
},
"resources": [
    {
        "apiVersion": "2016-10-01",
        "name": "[Concat(parameters('keyVault-name'), variables('resourceSuffix'))]",
        "location": "[parameters('keyVault-location')]",
        "type": "Microsoft.KeyVault/vaults",
        "properties": {
            "enabledForDeployment": "[parameters('keyVault-enabledForDeployment')]",
            "enabledForTemplateDeployment": "[parameters('keyVault-enabledForTemplateDeployment')]",
            "enabledForDiskEncryption": "[parameters('keyVault-enabledForDiskEncryption')]",
            "accessPolicies": "[parameters('keyVault-accessPolicies')]",
            "tenantId": "[parameters('keyVault-tenant')]",
            "sku": {
                "name": "[parameters('keyVault-sku')]",
                "family": "A"
            },
            "networkAcls": "[parameters('keyVault-networkAcls')]"
        }
    },
    {
      "apiVersion": "2018-03-31",
      "dependsOn": [
          "[Concat('Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix'))]",
          "[concat('Microsoft.Resources/deployments/', 'ClusterSubnetRoleAssignmentDeployment-20190210125857')]",
          "[concat('Microsoft.Resources/deployments/', 'AciSubnetRoleAssignmentDeployment-20190210125857')]"
      ],
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('aks-location')]",
      "name": "Concat(parameters('aks-resourceName'), variables('resourceSuffix') )]",
      "properties": {
          "kubernetesVersion": "[parameters('aks-kubernetesVersion')]",
          "enableRBAC": "[parameters('aks-enableRBAC')]",
          "dnsPrefix": "Concat(parameters('aks-dnsPrefix'), parameters('environmentLabel'))]",
          "agentPoolProfiles": [
              {
                  "name": "agentpool",
                  "osDiskSizeGB": "[parameters('aks-osDiskSizeGB')]",
                  "count": "[parameters('aks-agentCount')]",
                  "vmSize": "[parameters('aks-agentVMSize')]",
                  "osType": "[parameters('aks-osType')]",
                  "storageProfile": "ManagedDisks",
                  "vnetSubnetID": "[parameters('aks-vnetSubnetID')]"
              }
          ],
          "servicePrincipalProfile": {
              "ClientId": "[parameters('aks-servicePrincipalClientId')]",
              "Secret": "[parameters('aks-servicePrincipalClientSecret')]"
          },
          "networkProfile": {
              "networkPlugin": "[parameters('aks-networkPlugin')]",
              "serviceCidr": "[parameters('aks-serviceCidr')]",
              "dnsServiceIP": "[parameters('aks-dnsServiceIP')]",
              "dockerBridgeCidr": "[parameters('aks-dockerBridgeCidr')]"
          },
          "addonProfiles": {
              "httpApplicationRouting": {
                  "enabled": "[parameters('aks-enableHttpApplicationRouting')]"
              },
              "omsagent": {
                  "enabled": "[parameters('aks-enableOmsAgent')]",
                  "config": {
                      "logAnalyticsWorkspaceResourceID": "[parameters('aks-omsWorkspaceId')]"
                  }
              },
              "aciConnectorLinux": {
                  "enabled": "[parameters('aks-aciConnectorLinuxEnabled')]",
                  "config": {
                      "SubnetName": "[Concat(parameters('aks-aciVnetSubnetName'), variables('resourceSuffix') )]"
                  }
              }
          }
      },
      "tags": {
          "environment": "[parameters('environmentLabel')]"
      }
  },
  {
      "type": "Microsoft.Resources/deployments",
      "name": "SolutionDeployment-20190210125857",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[split(parameters('aks-omsWorkspaceId'),'/')[4]]",
      "subscriptionId": "[split(parameters('aks-omsWorkspaceId'),'/')[2]]",
      "properties": {
          "mode": "Incremental",
          "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {},
              "variables": {},
              "resources": [
                  {
                      "apiVersion": "2015-11-01-preview",
                      "type": "Microsoft.OperationsManagement/solutions",
                      "location": "[parameters('aks-workspaceRegion')]",
                      "name": "[concat('ContainerInsights', '(', split(parameters('aks-omsWorkspaceId'),'/')[8], ')')]",
                      "properties": {
                          "workspaceResourceId": "[parameters('aks-omsWorkspaceId')]"
                      },
                      "plan": {
                          "name": "[concat('ContainerInsights', '(', split(parameters('aks-omsWorkspaceId'),'/')[8], ')')]",
                          "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                          "promotionCode": "",
                          "publisher": "Microsoft"
                      }
                  }
              ]
          }
      },
      "dependsOn": []
  },
  {
      "apiVersion": "2018-08-01",
      "name": "[Concat('demo-devops-aks-arm-vnet', variables('resourceSuffix') )]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "westeurope",
      "properties": {
          "subnets": [
              {
                  "name": "default",
                  "id": "[Concat('/subscriptions/3aba1271-ca5f-49e8-9229-2214ec0ac30c/resourceGroups/demo-devops-aks-arm', variables('resourceSuffix'), '/providers/Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix'), '/subnets/default')]",
                  "properties": {
                      "addressPrefix": "10.240.0.0/16"
                  }
              },
              {
                  "name": "virtual-node-aci",
                  "id": "[Concat('/subscriptions/3aba1271-ca5f-49e8-9229-2214ec0ac30c/resourceGroups/demo-devops-aks-arm', variables('resourceSuffix'), '/providers/Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix'), '/subnets/virtual-node-aci')]",
                  "properties": {
                      "addressPrefix": "10.241.0.0/16",
                      "delegations": [
                          {
                              "name": "aciDelegation",
                              "properties": {
                                  "serviceName": "Microsoft.ContainerInstance/containerGroups",
                                  "actions": [
                                      "Microsoft.Network/virtualNetworks/subnets/action"
                                  ]
                              }
                          }
                      ]
                  }
              }
          ],
          "addressSpace": {
              "addressPrefixes": [
                  "10.0.0.0/8"
              ]
          }
      },
      "tags": {}
  },
  {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterSubnetRoleAssignmentDeployment-20190210125857",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[Concat('demo-devops-aks-arm', variables('resourceSuffix') )]",
      "subscriptionId": "3aba1271-ca5f-49e8-9229-2214ec0ac30c",
      "properties": {
          "mode": "Incremental",
          "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {},
              "variables": {},
              "resources": [
                  {
                      "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                      "apiVersion": "2017-05-01",
                      "name": "[Concat('demo-devops-aks-arm-vnet', variables('resourceSuffix'), '/default/Microsoft.Authorization/06b0a456-4bbf-42f4-9b2a-50eb535f0a3a')]",
                      "properties": {
                          "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                          "principalId": "[parameters('aks-principalId')]",
                          "scope": "[Concat('/subscriptions/3aba1271-ca5f-49e8-9229-2214ec0ac30c/resourceGroups/demo-devops-aks-arm', variables('resourceSuffix'), '/providers/Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix'), '/subnets/default')]"
                      }
                  }
              ]
          }
      },
      "dependsOn": [
          "[Concat('Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix') )]"
      ]
  },
  {
      "type": "Microsoft.Resources/deployments",
      "name": "AciSubnetRoleAssignmentDeployment-20190210125857",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[Concat('demo-devops-aks-arm', pvariables('resourceSuffix') )]",
      "subscriptionId": "3aba1271-ca5f-49e8-9229-2214ec0ac30c",
      "properties": {
          "mode": "Incremental",
          "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {},
              "variables": {},
              "resources": [
                  {
                      "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
                      "apiVersion": "2017-05-01",
                      "name": "[Concat('demo-devops-aks-arm-vnet', variables('resourceSuffix'), '/virtual-node-aci/Microsoft.Authorization/ba1950cb-558a-4b55-b593-83fe8b47ceb1')]",
                      "properties": {
                          "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                          "principalId": "[parameters('aks-principalId')]",
                          "scope": "[Concat('/subscriptions/3aba1271-ca5f-49e8-9229-2214ec0ac30c/resourceGroups/demo-devops-aks-arm', variables('resourceSuffix'), '/providers/Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix'), '/subnets/virtual-node-aci')]"
                      }
                  }
              ]
          }
      },
      "dependsOn": [
          "[Concat('Microsoft.Network/virtualNetworks/demo-devops-aks-arm-vnet', variables('resourceSuffix') )]"
      ]
  }
],
"outputs": {
  "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('aks-resourceName'), variables('resourceSuffix') )).fqdn]"
  }
}
}
